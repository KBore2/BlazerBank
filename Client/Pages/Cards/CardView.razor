@page "/cardview/{customerid:int}/{id:int}"
@using BlazerBank.Domain.Models
@inject NavigationManager NavigationManager

@inject ICardService CardService

@if (customerId!=null && Id != null)
{
    <h3>Card Number: @CardService.Card.CardNumber</h3>
}

<EditForm Model="@CardService.Card" OnSubmit="HandleSubmit">
    <div>
        <label for="ExpiryDate">ExpiryDate</label>
        <InputDate id="expirydate" @bind-Value="@CardService.Card.ExpiryDate" class="form-control"></InputDate>
    </div>
    <div>
        <label for="ccv">CCV</label>
        <InputNumber id="ccv" @bind-Value="@CardService.Card.Ccv" class="form-control"></InputNumber>
    </div>
    <button type="submit" class="btn btn-primary">Update Card</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteCard">Delete Card</button>
</EditForm>

@code {

    [Parameter]
    public int? customerId { get; set; }
    
    [Parameter]
    public int? Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (customerId!=null && Id != null)
        {
            await CardService.GetCard(customerId,Id);
        }
    }


    async void HandleSubmit()
    {
        if (Id != null)
        {
            await CardService.Edit(CardService.Card.CustomerId,CardService.Card.CardNumber,CardService.Card);
        }
    }

    async void DeleteCard()
    {

        if (Id != null)
        {
            int customerId = CardService.Card.CustomerId;
            await CardService.DeleteConfirmed(CardService.Card.CustomerId,CardService.Card.CardNumber);
            NavigationManager.NavigateTo($"cards/{customerId}");
        }
    }

}

